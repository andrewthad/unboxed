cabal-version: 3.4
name: unboxed
version: 0.2
synopsis: unboxed classes
description: unboxed classes.
homepage: https://github.com/ekmett/haskell
license: BSD-2-Clause OR Apache-2.0
license-file: LICENSE.md
author: Edward Kmett
maintainer: Edward Kmett <ekmett@gmail.com>
copyright: Copyright (c) 2021 Edward Kmett
stability: experimental
category: Data Structures
build-type: Simple
extra-doc-files:
  README.md,
  CHANGELOG.md
tested-with:
  GHC == 8.10.3

source-repository head
  type: git
  location: https://github.com/ekmett/unboxed

common base
  default-language: Haskell2010
  build-depends:
    base >= 4.15 && < 5,
    ghc-prim

  -- enable warnings
  ghc-options:
    -Wall -Wincomplete-uni-patterns -Wincomplete-record-updates
    -Wredundant-constraints -Widentities -Wprepositive-qualified-module

  -- disable warnings
  ghc-options:
    -Wno-simplifiable-class-constraints -Wno-orphans

library core
  import: base
  hs-source-dirs: core
  build-depends: linear-base
  exposed-modules:
    Unboxed.Levitation
    Unboxed.Internal.Class
    Unboxed.Internal.Combinators
    Unboxed.Internal.List
    Unboxed.Internal.Maybe
    Unboxed.Internal.Rebind
    Unboxed.Internal.Syntax
    Unboxed.Internal.Linear.Ur
    Unboxed.Internal.Linear

-- DEFaults and DEFinitions
library def
  import: base
  build-depends: unboxed:{core}
  hs-source-dirs: def
  signatures: Rep
  exposed-modules: Def

library reps
  import: base
  hs-source-dirs: reps
  exposed-modules:
    Rep.Addr Rep.Double Rep.Float
    Rep.Int Rep.Int8 Rep.Int16 Rep.Int32 Rep.Int64
    Rep.Lifted Rep.Unlifted
    Rep.Sum Rep.Tuple
    Rep.Word Rep.Word8 Rep.Word16 Rep.Word32 Rep.Word64
    Nil

library defs
  import: base
  build-depends: unboxed:{def, core, reps}
  hs-source-dirs: defs
  mixins:
    unboxed:def (Def as Def.Addr) requires (Rep as Rep.Addr),
    unboxed:def (Def as Def.Double) requires (Rep as Rep.Double),
    unboxed:def (Def as Def.Float) requires (Rep as Rep.Float),
    unboxed:def (Def as Def.Int) requires (Rep as Rep.Int),
    unboxed:def (Def as Def.Int8) requires (Rep as Rep.Int8),
    unboxed:def (Def as Int16) requires (Rep as Rep.Int16),
    unboxed:def (Def as Int32) requires (Rep as Rep.Int32),
    unboxed:def (Def as Int64) requires (Rep as Rep.Int64),
    unboxed:def (Def as Def.Unlifted) requires (Rep as Rep.Unlifted),
    unboxed:def (Def as Sum) requires (Rep as Rep.Sum),
    unboxed:def (Def as Def.Tuple) requires (Rep as Rep.Tuple),
    unboxed:def (Def as Def.Word) requires (Rep as Rep.Word),
    unboxed:def (Def as Word8) requires (Rep as Rep.Word8),
    unboxed:def (Def as Word16) requires (Rep as Rep.Word16),
    unboxed:def (Def as Word32) requires (Rep as Rep.Word32),
    unboxed:def (Def as Word64) requires (Rep as Rep.Word64)
  exposed-modules: Addr Double Float Int Int8 Tuple Lifted Unlifted Word
  -- TODO
  reexported-modules: Int16, Int32, Int64, Sum, Word8, Word16, Word32, Word64

library
  import: base
  build-depends: unboxed:{defs, core}
  hs-source-dirs: src
  exposed-modules:
    Unboxed.Prelude
    Unboxed.Class
    Unboxed.Combinators
    Unboxed.Syntax
    Unboxed.Maybe
    Unboxed.List
    Unboxed.Rep
  reexported-modules:
    Unboxed.Levitation,
    Addr as Unboxed.Rep.Addr,
    Double as Unboxed.Rep.Double,
    Float as Unboxed.Rep.Float,
    Int as Unboxed.Rep.Int,
    Int8 as Unboxed.Rep.Int8,
    Int16 as Unboxed.Rep.Int16,
    Int32 as Unboxed.Rep.Int32,
    Int64 as Unboxed.Rep.Int64,
    Lifted as Unboxed.Rep.Lifted,
    Unlifted as Unboxed.Rep.Unlifted,
    Tuple as Unboxed.Rep.Tuple,
    Sum as Unboxed.Rep.Sum,
    Word as Unboxed.Rep.Word,
    Word8 as Unboxed.Rep.Word8,
    Word16 as Unboxed.Rep.Word16,
    Word32 as Unboxed.Rep.Word32,
    Word64 as Unboxed.Rep.Word64

