cabal-version: 3.0
name: unboxed
version: 0.2
synopsis: unboxed classes
description: unboxed classes.
homepage: https://github.com/ekmett/haskell
license: BSD-2-Clause OR Apache-2.0
license-file: LICENSE.md
author: Edward Kmett
maintainer: Edward Kmett <ekmett@gmail.com>
copyright: Copyright (c) 2021 Edward Kmett
stability: experimental
category: Data Structures
build-type: Simple
extra-doc-files:
  README.md,
  CHANGELOG.md
tested-with:
  GHC == 8.10.3

source-repository head
  type: git
  location: https://github.com/ekmett/unboxed

flag consdefs
  default: False
  manual: True

common minimal
  default-language: Haskell2010

common base
  import: minimal
  build-depends:
    base >= 4.15 && < 5,
    ghc-prim

  -- enable warnings
  ghc-options:
    -Wall -Wincomplete-uni-patterns -Wincomplete-record-updates
    -Wredundant-constraints -Widentities -Wprepositive-qualified-module

  -- disable warnings
  ghc-options:
    -Wno-simplifiable-class-constraints -Wno-orphans

library internal
  import: base
  hs-source-dirs: internal
  build-depends: linear-base
  exposed-modules:
    Unboxed.Internal.Levitation
    Unboxed.Internal.Class
    Unboxed.Internal.Combinators
    Unboxed.Internal.List
    Unboxed.Internal.Maybe
    Unboxed.Internal.Rebind
    Unboxed.Internal.Syntax
    Unboxed.Internal.Linear.Ur
    Unboxed.Internal.Linear

    AddrRep DoubleRep FloatRep
    IntRep Int8Rep Int16Rep Int32Rep Int64Rep
    LiftedRep UnliftedRep
    SumRep TupleRep
    WordRep Word8Rep Word16Rep Word32Rep Word64Rep

    NilReps

-- DEFaults and DEFinitions
library def
  import: base
  build-depends: internal
  hs-source-dirs: def
  signatures: Rep
  exposed-modules: Def

library consreps
  import: base
  hs-source-dirs: consreps
  signatures: H T
  exposed-modules: ConsReps Tuple Sum

library consdef
  import: minimal
  build-depends: consreps, def
  mixins:
    def (Def as Def.Tuple) requires (Rep as Tuple),
    def (Def as Def.Sum) requires (Rep as Sum)
  -- signatures: H T
  reexported-modules: Def.Tuple, Def.Sum

library consdefs
  import: minimal
  build-depends: consdef, internal
  mixins:
    consdef(Def.Tuple as Tuple.Addr, Def.Sum as Sum.Addr) requires (H as Addr),
    consdef(Def.Tuple as Tuple.Double, Def.Sum as Sum.Double) requires (H as Double),
    consdef(Def.Tuple as Tuple.Float, Def.Sum as Sum.Float) requires (H as Float),
    consdef(Def.Tuple as Tuple.Lifted, Def.Sum as Sum.Lifted) requires (H as Lifted),
    consdef(Def.Tuple as Tuple.Unlifted, Def.Sum as Sum.Unlifted) requires (H as Unlifted)
  -- signatures: T
  reexported-modules:
    Tuple.Addr, Tuple.Double, Tuple.Float, Tuple.Lifted, Tuple.Unlifted,
    Sum.Addr, Sum.Double, Sum.Float, Sum.Lifted, Sum.Unlifted

library
  import: base
  build-depends: def, internal
  hs-source-dirs: src
  exposed-modules:
    Unboxed.Prelude
    Unboxed.Class
    Unboxed.Combinators
    Unboxed.Syntax
    Unboxed.Maybe
    Unboxed.Levitation
    Unboxed.List
    Unboxed.Rep.Addr
    Unboxed.Rep.Double
    Unboxed.Rep.Float
    Unboxed.Rep.Int
    Unboxed.Rep.Int8
    Unboxed.Rep.Tuple
    Unboxed.Rep.Lifted
    Unboxed.Rep.Unlifted
    Unboxed.Rep.Word
  mixins:
    def (Def as Def.Addr) requires (Rep as AddrRep),
    def (Def as Def.Double) requires (Rep as DoubleRep),
    def (Def as Def.Float) requires (Rep as FloatRep),
    def (Def as Def.Int) requires (Rep as IntRep),
    def (Def as Def.Int8) requires (Rep as Int8Rep),
    def (Def as Unboxed.Rep.Int16) requires (Rep as Int16Rep),
    def (Def as Unboxed.Rep.Int32) requires (Rep as Int32Rep),
    def (Def as Unboxed.Rep.Int64) requires (Rep as Int64Rep),
    def (Def as Def.Unlifted) requires (Rep as UnliftedRep),
    def (Def as Unboxed.Rep.Sum) requires (Rep as SumRep),
    def (Def as Def.Tuple) requires (Rep as TupleRep),
    def (Def as Def.Word) requires (Rep as WordRep),
    def (Def as Unboxed.Rep.Word8) requires (Rep as Word8Rep),
    def (Def as Unboxed.Rep.Word16) requires (Rep as Word16Rep),
    def (Def as Unboxed.Rep.Word32) requires (Rep as Word32Rep),
    def (Def as Unboxed.Rep.Word64) requires (Rep as Word64Rep),
  reexported-modules:
    Unboxed.Rep.Int16,
    Unboxed.Rep.Int32,
    Unboxed.Rep.Int64,
    Unboxed.Rep.Sum,
    Unboxed.Rep.Word8,
    Unboxed.Rep.Word16,
    Unboxed.Rep.Word32,
    Unboxed.Rep.Word64,

  if flag(consdefs)
    build-depends: consdefs
    mixins:
      consdefs (
        Tuple.Addr as Unboxed.Rep.Tuple1.Addr,
        Tuple.Double as Unboxed.Rep.Tuple1.Double,
        Sum.Addr as Unboxed.Rep.Sum1.Addr,
        Sum.Double as Unboxed.Rep.Sum1.Double
      ) requires (T as NilReps)
    reexported-modules:
      Unboxed.Rep.Tuple1.Addr,
      Unboxed.Rep.Tuple1.Double,
      Unboxed.Rep.Sum1.Addr,
      Unboxed.Rep.Sum1.Double
