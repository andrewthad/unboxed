cabal-version: 3.0
name: unboxed
version: 0.2
synopsis: unboxed classes
description: unboxed classes.
homepage: https://github.com/ekmett/haskell
license: BSD-2-Clause OR Apache-2.0
license-file: LICENSE.md
author: Edward Kmett
maintainer: Edward Kmett <ekmett@gmail.com>
copyright: Copyright (c) 2021 Edward Kmett
stability: experimental
category: Data Structures
build-type: Simple
extra-doc-files:
  README.md,
  CHANGELOG.md
tested-with:
  GHC == 8.10.3

source-repository head
  type: git
  location: https://github.com/ekmett/unboxed

common base
  default-language: Haskell2010
  build-depends:
    base >= 4.15 && < 5,
    ghc-prim

  -- enable warnings
  ghc-options:
    -Wall -Wincomplete-uni-patterns -Wincomplete-record-updates
    -Wredundant-constraints -Widentities -Wprepositive-qualified-module

  -- disable warnings
  ghc-options:
    -Wno-simplifiable-class-constraints -Wno-orphans

library core
  import: base
  hs-source-dirs: core
  build-depends: linear-base
  exposed-modules:
    Unboxed.Internal.Levitation
    Unboxed.Internal.Class
    Unboxed.Internal.Combinators
    Unboxed.Internal.List
    Unboxed.Internal.Maybe
    Unboxed.Internal.Rebind
    Unboxed.Internal.Syntax
    Unboxed.Internal.Linear.Ur
    Unboxed.Internal.Linear
    AddrRep DoubleRep FloatRep
    IntRep Int8Rep Int16Rep Int32Rep Int64Rep
    LiftedRep UnliftedRep
    SumRep TupleRep
    WordRep Word8Rep Word16Rep Word32Rep Word64Rep
    Nil

-- DEFaults and DEFinitions
library def
  import: base
  build-depends: core
  hs-source-dirs: def
  signatures: Rep
  exposed-modules: Def

library
  import: base
  build-depends: def, core
  hs-source-dirs: src
  exposed-modules:
    Unboxed.Prelude
    Unboxed.Class
    Unboxed.Combinators
    Unboxed.Syntax
    Unboxed.Maybe
    Unboxed.Levitation
    Unboxed.List
    Unboxed.Rep.Addr
    Unboxed.Rep.Double
    Unboxed.Rep.Float
    Unboxed.Rep.Int
    Unboxed.Rep.Int8
    Unboxed.Rep.Tuple
    Unboxed.Rep.Lifted
    Unboxed.Rep.Unlifted
    Unboxed.Rep.Word
  mixins:
    def (Def as Addr) requires (Rep as AddrRep),
    def (Def as Double) requires (Rep as DoubleRep),
    def (Def as Float) requires (Rep as FloatRep),
    def (Def as Int) requires (Rep as IntRep),
    def (Def as Int8) requires (Rep as Int8Rep),
    def (Def as Unboxed.Rep.Int16) requires (Rep as Int16Rep),
    def (Def as Unboxed.Rep.Int32) requires (Rep as Int32Rep),
    def (Def as Unboxed.Rep.Int64) requires (Rep as Int64Rep),
    def (Def as Unlifted) requires (Rep as UnliftedRep),
    def (Def as Unboxed.Rep.Sum) requires (Rep as SumRep),
    def (Def as Tuple) requires (Rep as TupleRep),
    def (Def as Word) requires (Rep as WordRep),
    def (Def as Unboxed.Rep.Word8) requires (Rep as Word8Rep),
    def (Def as Unboxed.Rep.Word16) requires (Rep as Word16Rep),
    def (Def as Unboxed.Rep.Word32) requires (Rep as Word32Rep),
    def (Def as Unboxed.Rep.Word64) requires (Rep as Word64Rep)
  reexported-modules:
    Unboxed.Rep.Int16,
    Unboxed.Rep.Int32,
    Unboxed.Rep.Int64,
    Unboxed.Rep.Sum,
    Unboxed.Rep.Word8,
    Unboxed.Rep.Word16,
    Unboxed.Rep.Word32,
    Unboxed.Rep.Word64
